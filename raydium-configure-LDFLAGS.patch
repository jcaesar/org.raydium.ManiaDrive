--- /tmp/configure.orig	2018-06-10 09:50:27.089425863 +0200
+++ /tmp/configure	2018-06-10 10:42:00.828321572 +0200
@@ -9,7 +9,7 @@
 test_build()
 {
 echo "$1" > configure.c
-gcc -g configure.c -Wall -o configure.bin $2 2> configure.log
+gcc -g configure.c -Wall -o configure.bin $2 $LDFLAGS 2>configure.log
 
 if [ "$?" != "0" ]; then
     echo " build: failed"
@@ -53,18 +53,8 @@
 
 ode_install()
 {
-echo "ODE Auto local installation ..."
-if [ -d "ode" ]; then
-    echo "ODE (partial ?) install detected, abort (ode/)"
-    exit 1
-fi
-
 # download
-echo "Downloading from CVS ..."
-cvs -d:pserver:anonymous:@cvs.sourceforge.net:/cvsroot/opende login
-exit_if_error "$?" "No cvs client installed ?"
-cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/opende co -r UNSTABLE -P ode
-exit_if_error "$?" "CVS server error ? Try manual install (http://ode.org)"
+echo "Downloading from CVS skipped"
 
 # configure (step 1)
 echo '
@@ -102,16 +92,8 @@
 
 php_install()
 {
-echo "PHP4 Auto local installation ..."
-if [ -d "php" ]; then
-    echo "PHP (partial ?) install detected, abort (php/)"
-    exit 1
-fi
-
 # download
-echo "Downloading latest PHP4 ..."
-wget -O php4-last.tar.gz http://snaps.php.net/php4-STABLE-latest.tar.gz
-exit_if_error "$?" "wget not found, or network error"
+echo "Downloading latest PHP4 skipped"
 
 # uncompress
 echo "Uncompressing ..."
@@ -207,18 +189,10 @@
 #include <string.h>
 #include <GL/glut.h>
 int main(int argc, char **argv) { 
-char *r;
-glutInit(&argc,argv);
-glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
-glutInitWindowSize(320,240);
-glutCreateWindow("Test window");
-r=glGetString(GL_RENDERER);
-if(!strcmp(r,"Mesa GLX Indirect"))
-    {
-    fprintf(stderr,"WARNING ! Mesa Software renderer detected !");
-    fprintf(stdout,"WARNING ! Mesa Software renderer detected !");
-    }
-return 0; }
+// just check definedness
+int consttest = GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH | GL_RENDERER;
+int functest = glutInit && glutInitDisplayMode && glutInitWindowSize && glutCreateWindow && glGetString;
+return functest? 0:1; }
 '
 test_build "$file" "-L/usr/X11R6/lib/ -lGL -lglut -lGLU"
 exit_if_error "$?" "Full GL test faild, see configure.log"
